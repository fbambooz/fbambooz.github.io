<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>F.C.Y</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fbambooz.com/"/>
  <updated>2017-07-15T09:22:40.072Z</updated>
  <id>http://fbambooz.com/</id>
  
  <author>
    <name>Fbambooz</name>
    <email>fbambooz@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu16.04.2安装后优化</title>
    <link href="http://fbambooz.com/2017/07/15/Ubuntu16-04-2%E5%AE%89%E8%A3%85%E5%90%8E%E4%BC%98%E5%8C%96/"/>
    <id>http://fbambooz.com/2017/07/15/Ubuntu16-04-2安装后优化/</id>
    <published>2017-07-15T09:17:25.000Z</published>
    <updated>2017-07-15T09:22:40.072Z</updated>
    
    <content type="html"><![CDATA[<p>因为学习需要，经常会装ubuntu，这里记录下装16.04.2后对系统的优化。</p>
<h1 id="删除不常用的系统自带软件"><a href="#删除不常用的系统自带软件" class="headerlink" title="删除不常用的系统自带软件"></a>删除不常用的系统自带软件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo apt remove libreoffice-common unity-webapps-common thunderbird totem rhythmbox simple-scan gnome-mahjongg aisleriot gnome-mines cheese gnome-sudoku transmission-common gnome-orca webbrowser-app deja-dup onboard remmina</div></pre></td></tr></table></figure>
<blockquote>
<p>liboffice-common 系统自带offic，用处不打，可用wps代替<br>unity-webapps-common Amazon链接<br>thunderbird 雷鸟邮件客户端<br>totem 自带的播放器<br>rhythmbox 自带的音乐播放器<br>simple-scan 扫描仪<br>gnome-mahjongg 麻将对对碰<br>aisleriot 纸牌<br>gnome-mines 扫雷<br>cheese webcam应用<br>gnome-sudoku 数独<br>transmission-common BT客户端<br>gnome-orca 屏幕阅读<br>webbrowser-app 自带的浏览器<br>deja-dup 备份<br>onboard 屏幕键盘<br>remmina 远程桌面</p>
</blockquote>
<h1 id="安装VIM"><a href="#安装VIM" class="headerlink" title="安装VIM"></a>安装VIM</h1><p>ubuntu自带的是VI，而我更喜欢用VIM<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo apt install vim</div></pre></td></tr></table></figure></p>
<h1 id="更换源为阿里云源"><a href="#更换源为阿里云源" class="headerlink" title="更换源为阿里云源"></a>更换源为阿里云源</h1><h2 id="备份原有源"><a href="#备份原有源" class="headerlink" title="备份原有源"></a>备份原有源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bk</div></pre></td></tr></table></figure>
<h2 id="用vim修改-etc-apt-sources-list"><a href="#用vim修改-etc-apt-sources-list" class="headerlink" title="用vim修改/etc/apt/sources.list"></a>用vim修改/etc/apt/sources.list</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo vim /etc/apt/sources.list</div></pre></td></tr></table></figure>
<h2 id="修改为阿里云的源"><a href="#修改为阿里云的源" class="headerlink" title="修改为阿里云的源"></a>修改为阿里云的源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure>
<h2 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo apt update</div></pre></td></tr></table></figure>
<h1 id="安装Google拼音"><a href="#安装Google拼音" class="headerlink" title="安装Google拼音"></a>安装Google拼音</h1><p>输入法是看个人的喜好，我这里个人喜欢使用Google pinyin，简单，轻便。<br>下载googlepinyin<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo apt install fcitx-googlepinyin</div></pre></td></tr></table></figure></p>
<p>在 <em>系统设置（seetings）</em> -&gt; <em>语言支持（Language Support）</em> 里将 <em>键盘输入法系统（keyboard input method system）</em> 设置为 <em>fcitx</em></p>
<p>重启系统</p>
<p>在 <em>系统设置（seetings）</em> -&gt; <em>文本输入（Text Entry）</em> 里添加 <em>Googlepinyin</em> 即可</p>
<h1 id="安装Google-Chrome"><a href="#安装Google-Chrome" class="headerlink" title="安装Google Chrome"></a>安装Google Chrome</h1><h2 id="添加google公钥，用于对下载软件进行验证"><a href="#添加google公钥，用于对下载软件进行验证" class="headerlink" title="添加google公钥，用于对下载软件进行验证"></a>添加google公钥，用于对下载软件进行验证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add –</div></pre></td></tr></table></figure>
<h2 id="添加Google-Chrome-PPA"><a href="#添加Google-Chrome-PPA" class="headerlink" title="添加Google Chrome PPA"></a>添加Google Chrome PPA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sudo sh -c &apos;echo &quot;deb http://dl.google.com/linux/chrome/deb/ stable main&quot; &gt;&gt; /etc/apt/sources.list.d/google.list&apos;</div></pre></td></tr></table></figure>
<h2 id="安装Chrome"><a href="#安装Chrome" class="headerlink" title="安装Chrome"></a>安装Chrome</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># sudo apt update</div><div class="line"># sudo apt install google-chrome-stable</div></pre></td></tr></table></figure>
<p>接下来就可以使用Chrome了，这种方法的好处是不用下载deb包就能安装，当然你也可以通过下载deb包，然后直接安装。</p>
<h1 id="安装indicator-sysmonitor"><a href="#安装indicator-sysmonitor" class="headerlink" title="安装indicator-sysmonitor"></a>安装indicator-sysmonitor</h1><p>这是一款能够实时查看系统当前cpu，内存，网络等信息的软件。<br><img src="http://or8rxwtgb.bkt.clouddn.com/indicator-sysmonitor.png" alt="indicator-sysmonitor"></p>
<p>因为这是ppa源软件，需要先添加ppa源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor</div><div class="line"># sudo apt update</div><div class="line"># sudo apt intall indicator-sysmonitor</div></pre></td></tr></table></figure></p>
<p>安装完成后，可以在软件列表中选择执行，也可以终端执行 <code>indicator-sysmonitor &amp;</code>,右键点击右上角标题栏上图标，选择 <code>Perferences</code> 选项，勾选 <code>Run on startup</code>即可开机启动。<br><img src="http://or8rxwtgb.bkt.clouddn.com/indicator-sysmonitor-perferences-general.png" alt="indicator-sysmonitor-perferences-general"></p>
<p>切换到 <code>Advanced</code>，对要显示的信息进行自定义设置<br><img src="http://or8rxwtgb.bkt.clouddn.com/indicator-sysmonitor-perferences-advanced.png" alt="indicator-sysmonitor-perferences-advanced"></p>
<h1 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h1><h2 id="安装Unity图形管理工具"><a href="#安装Unity图形管理工具" class="headerlink" title="安装Unity图形管理工具"></a>安装Unity图形管理工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sudo apt install unity-tweak-tool</div></pre></td></tr></table></figure>
<h2 id="安装Flatabulous主题"><a href="#安装Flatabulous主题" class="headerlink" title="安装Flatabulous主题"></a>安装Flatabulous主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># sudo add-apt-repository ppa:noobslab/themes</div><div class="line"># sudo apt update</div><div class="line"># sudo apt install flatabulous-theme</div></pre></td></tr></table></figure>
<h2 id="安装ultra-flat图标"><a href="#安装ultra-flat图标" class="headerlink" title="安装ultra-flat图标"></a>安装ultra-flat图标</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># sudo add-apt-repository ppa:noobslab/icons</div><div class="line"># sudo apt update</div><div class="line"># sudo apt install ultra-flat-icons</div></pre></td></tr></table></figure>
<p>在unity-tweak-tool中更换主题和图标<br><img src="http://or8rxwtgb.bkt.clouddn.com/flatabulous-theme.png" alt="flatabulous"><br><img src="http://or8rxwtgb.bkt.clouddn.com/ultra-flat-icons.png" alt="ultra-flat"></p>
<p>还可以根据自己的喜好更换桌面背景，这里推荐一个网站<a href="https://www.pexels.com/" target="_blank" rel="external">PEXELS</a>，里面全是免费高清图。</p>
<p>下面是我美化后的桌面<br><img src="http://or8rxwtgb.bkt.clouddn.com/ubuntu_desktop.png" alt="ubuntu-desktop"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为学习需要，经常会装ubuntu，这里记录下装16.04.2后对系统的优化。&lt;/p&gt;
&lt;h1 id=&quot;删除不常用的系统自带软件&quot;&gt;&lt;a href=&quot;#删除不常用的系统自带软件&quot; class=&quot;headerlink&quot; title=&quot;删除不常用的系统自带软件&quot;&gt;&lt;/a&gt;删除不
    
    </summary>
    
    
      <category term="linux" scheme="http://fbambooz.com/tags/linux/"/>
    
      <category term="ubuntu" scheme="http://fbambooz.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.5安装OpenStack Icehouse版本</title>
    <link href="http://fbambooz.com/2017/06/25/Centos6.5%E5%AE%89%E8%A3%85OpenStack%20Icehouse%E7%89%88%E6%9C%AC/"/>
    <id>http://fbambooz.com/2017/06/25/Centos6.5安装OpenStack Icehouse版本/</id>
    <published>2017-06-25T10:10:05.000Z</published>
    <updated>2017-07-14T13:17:42.538Z</updated>
    
    <content type="html"><![CDATA[<p>之前因为需要在CentOS6.5上面安装了OpenStack的Icehouse版本，这里对安装过程进行记录。我这里是选择了OpenStack最基础的结构也就是一个控制节点<code>controller</code>和一个计算节点<code>compute</code>进行搭建，如下图所示。<br><img src="http://or8rxwtgb.bkt.clouddn.com/nova-network_architecture.png" alt="nova-network架构"></p>
<h1 id="环境-amp-版本"><a href="#环境-amp-版本" class="headerlink" title="环境 &amp; 版本"></a>环境 &amp; 版本</h1><p>安装镜像：CentOS-6.5-x86_64-bin-DVD1.iso<br>OS：CentOS 6.5<br>内核：2.6.32-431.el6.x86_64<br>OpenStack：Icehouse</p>
<hr>
<h1 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h1><p>以下步骤需要在 <code>controller</code> 和 <code>compute</code> 节点上都进行操作。</p>
<h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># service iptables stop</div><div class="line"># chkconfig iptables off</div></pre></td></tr></table></figure>
<h2 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h2><h3 id="修改-etc-yum-conf文件"><a href="#修改-etc-yum-conf文件" class="headerlink" title="修改/etc/yum.conf文件"></a>修改/etc/yum.conf文件</h3><p>在/etc/yum.conf文件中[main]下添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">exclude=kernel*</div><div class="line">exclude=centos-release*</div></pre></td></tr></table></figure></p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/Centos65YumConf.png" alt="修改/etc/yum.conf文件"><br>（因为我当时需要在centos6.5版本中安装，如果不是，可以忽略此步）</p>
<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><p>这里 <code>controller</code>节点只需要一个网卡<code>eth0</code>用来跟 <code>compute</code>节点通信，而 <code>compute</code>节点需要两个网卡<code>eth0</code>和<code>eth1</code>，其中<code>eth0</code>用来与 <code>controller</code>通信，而 <code>eth1</code>用来与外部网络通信。</p>
<p>编辑/etc/sysconfig/network-scripts/ifcfg-eth0文件，启动网络。因为默认centos6.5安装好网络默认关闭。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">···</div><div class="line">ONBOOT=yes</div><div class="line">BOOTPROTO=dhcp</div><div class="line">···</div></pre></td></tr></table></figure></p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/startnetwork.png" alt="startnetwork"></p>
<p>此外， <code>compute</code>节点上需要修改 <code>eth1</code>，编辑/etc/sysconfig/network-scripts/ifcfg-eth1文件，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">···</div><div class="line">ONBOOT=yes</div><div class="line">BOOTPROTO=none</div><div class="line">···</div></pre></td></tr></table></figure></p>
<p>修改完后，重启网络服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># service network restart</div><div class="line"># ifconfig</div></pre></td></tr></table></figure></p>
<p>记录下eth0的ip地址，根据ip地址修改/etc/hosts文件，添加 <code>controller</code> 和 <code>compute</code>节点的ip。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</div><div class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</div><div class="line"></div><div class="line">192.168.159.130 controller</div><div class="line">192.168.159.131 compute</div></pre></td></tr></table></figure></p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/Centos65Host.png" alt="修改hosts文件"></p>
<h2 id="添加IceHouse源"><a href="#添加IceHouse源" class="headerlink" title="添加IceHouse源"></a>添加IceHouse源</h2><p>安装yum-plugin-priority插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install yum-plugin-priorities</div></pre></td></tr></table></figure></p>
<p>在/etc/yum.repos.d/目录下新建 <code>rdo-release.repo</code>文件，并将如下内容写入该文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[openstack-icehouse]</div><div class="line">name=OpenStack Icehouse Repository</div><div class="line">baseurl=http://repos.fedorapeople.org/repos/openstack/EOL/openstack-icehouse/epel-6/</div><div class="line">enabled=1</div><div class="line">skip_if_unavailable=0</div><div class="line">gpgcheck=0</div><div class="line">#gpgkey=file:///etc/pki/rpm-gpg/RPM_GPG_KEY_RDO_Icehouse</div><div class="line">#priority=98</div></pre></td></tr></table></figure></p>
<p>安装最新的epel-release包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>安装openstakc-utils包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-utils</div></pre></td></tr></table></figure></p>
<p>安装openstack-selinux包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-selinux</div></pre></td></tr></table></figure></p>
<p>安装完成后upgrade<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum upgrade</div></pre></td></tr></table></figure></p>
<h2 id="安装消息队列qpid"><a href="#安装消息队列qpid" class="headerlink" title="安装消息队列qpid"></a>安装消息队列qpid</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install qpid-cpp-server</div></pre></td></tr></table></figure>
<h3 id="配置qpid"><a href="#配置qpid" class="headerlink" title="配置qpid"></a>配置qpid</h3><p>编辑/etc/qpidd.conf文件，将字段 <code>auth</code>设置为no<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">···</div><div class="line">auth=no</div></pre></td></tr></table></figure></p>
<h3 id="启动qpid并设置开机启动"><a href="#启动qpid并设置开机启动" class="headerlink" title="启动qpid并设置开机启动"></a>启动qpid并设置开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># service qpidd start</div><div class="line"># chkconfig qpidd on</div></pre></td></tr></table></figure>
<hr>
<h1 id="控制节点controller配置"><a href="#控制节点controller配置" class="headerlink" title="控制节点controller配置"></a>控制节点controller配置</h1><h2 id="安装MySQL数据库"><a href="#安装MySQL数据库" class="headerlink" title="安装MySQL数据库"></a>安装MySQL数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install mysql mysql-server MySQL-python</div></pre></td></tr></table></figure>
<h3 id="修改数据库配置"><a href="#修改数据库配置" class="headerlink" title="修改数据库配置"></a>修改数据库配置</h3><p>编辑/etc/my.cnf文档，在[mysqld]下加入如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line">bind-address = controller</div><div class="line">default-storage-engine = innodb</div><div class="line">innodb_file_per_table</div><div class="line">collation-server = utf8_general_ci</div><div class="line">init-connect = &apos;SET NAMES utf8&apos;</div><div class="line">character-set-server = utf8</div></pre></td></tr></table></figure></p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/add_in_mysql_conf.png" alt="修改my.cnf文件"></p>
<h3 id="启动mysql并设置开机启动"><a href="#启动mysql并设置开机启动" class="headerlink" title="启动mysql并设置开机启动"></a>启动mysql并设置开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># service mysqld start</div><div class="line"># chkconfig mysqld on</div></pre></td></tr></table></figure>
<h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><p>初始化数据库，根据自己需要设置相应参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mysql_install_db</div><div class="line"># mysql_secure_installation</div></pre></td></tr></table></figure></p>
<h2 id="安装配置身份认证组件keystone"><a href="#安装配置身份认证组件keystone" class="headerlink" title="安装配置身份认证组件keystone"></a>安装配置身份认证组件keystone</h2><h3 id="安装keystone"><a href="#安装keystone" class="headerlink" title="安装keystone"></a>安装keystone</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-keystone python-keystoneclient</div></pre></td></tr></table></figure>
<h3 id="配置keystone"><a href="#配置keystone" class="headerlink" title="配置keystone"></a>配置keystone</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"># openstack-config --set /etc/keystone/keystone.conf database connection mysql://keystone:passwd@controller/keystone</div><div class="line"></div><div class="line"># mysql -uroot -p</div><div class="line">mysql&gt; CREATE DATABASE keystone;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;%&apos; IDENTIFIED BY &apos;password’;</div><div class="line">mysql&gt; exit</div><div class="line"></div><div class="line"># su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone</div><div class="line"># mysql -uroot -p</div><div class="line"># ADMIN_TOKEN=$(openssl rand -hex 10)</div><div class="line"># echo $ADMIN_TOKEN</div><div class="line"># openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token $ADMIN_TOKEN</div><div class="line"># keystone-manage pki_setup --keystone-user keystone --keystone-group keystone</div><div class="line"># chown -R keystone:keystone /etc/keystone/ssl</div><div class="line"># chmod -R o-rwx /etc/keystone/ssl</div><div class="line"># service openstack-keystone start</div><div class="line"># service openstack-keystone on</div><div class="line"># chkconfig openstack-keystone on</div><div class="line"># (crontab -l -u keystone 2&gt;&amp;1 | grep -q token_flush) || echo &apos;@hourly /usr/bin/keystone-manage token_flush &gt;/var/log/keystone/keystone-tokenflush.log 2&gt;&amp;1&apos; &gt;&gt; /var/spool/cron/keystone</div></pre></td></tr></table></figure>
<h3 id="创建用户、租户、角色"><a href="#创建用户、租户、角色" class="headerlink" title="创建用户、租户、角色"></a>创建用户、租户、角色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># export OS_SERVICE_TOKEN=$ADMIN_TOKEN</div><div class="line"># export OS_SERVICE_ENDPOINT=http://controller:35357/v2.0</div><div class="line"># keystone user-create --name=admin --pass=passwd --email=123456@qq.com</div><div class="line"># keystone role-create --name=admin</div><div class="line"># keystone tenant-create --name=admin --description=&quot;Admin Tenant&quot;</div><div class="line"># keystone user-role-add --user=admin --tenant=admin --role=admin</div><div class="line"># keystone user-role-add --user=admin --role_member_ --tenant=admin</div><div class="line"># keystone user-role-add --user=admin --role=_member_ --tenant=admin</div><div class="line"># keystone tenant-create --name=service --description=&quot;Service Tenant&quot;</div><div class="line"># keystone service-create --name=keystone --type=identity --description=&quot;OpenStack Identity&quot;</div><div class="line"># keystone endpoint-create --service-id=$(keystone service-list | awk &apos;/ identity / &#123;print $2&#125;&apos;) --publicurl=http://controller:5000/v2.0 --internalurl=http://controller:5000/v2.0 --adminurl=http://controller:35357/v2.0</div></pre></td></tr></table></figure>
<h3 id="验证keyston是否成功安装"><a href="#验证keyston是否成功安装" class="headerlink" title="验证keyston是否成功安装"></a>验证keyston是否成功安装</h3><h4 id="创建-admin-openrc-sh文件"><a href="#创建-admin-openrc-sh文件" class="headerlink" title="创建 admin-openrc.sh文件"></a>创建 <code>admin-openrc.sh</code>文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export OS_USERNAME=admin</div><div class="line">export OS_PASSWORD=ADMIN_PASS</div><div class="line">export OS_TENANT_NAME=admin</div><div class="line">export OS_AUTH_URL=http://controller:35357/v2.0</div></pre></td></tr></table></figure>
<p>将上述变量添加到环境变量中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># source admin-openrc.sh</div></pre></td></tr></table></figure></p>
<h4 id="验证keystone"><a href="#验证keystone" class="headerlink" title="验证keystone"></a>验证keystone</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># keystone token-get</div></pre></td></tr></table></figure>
<p>这条命令将返回一个token和租户的ID，用来验证已经正确配置了环境变量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># keystoen user-list</div></pre></td></tr></table></figure>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/user-list.png" alt="user-list"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># keystone user-role-list --user admin --tenant admin</div></pre></td></tr></table></figure>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/user-role-list.png" alt="user-role-list"></p>
<p>如果上述命令正常显示，说明keystone服务已正常安装</p>
<h2 id="安装和配置镜像组件glance"><a href="#安装和配置镜像组件glance" class="headerlink" title="安装和配置镜像组件glance"></a>安装和配置镜像组件glance</h2><h3 id="安装glance"><a href="#安装glance" class="headerlink" title="安装glance"></a>安装glance</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-glance python-glanceclient</div></pre></td></tr></table></figure>
<h3 id="配置glance数据库"><a href="#配置glance数据库" class="headerlink" title="配置glance数据库"></a>配置glance数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># openstack-config --set /etc/glance/glance-api.conf database connection mysql://glance:passwd@controller/glance</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf database connection mysql://glance:passwd@controller/glance</div><div class="line"></div><div class="line"># mysql -uroot -p</div><div class="line">mysql&gt; CREATE DATABASE glance;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;%&apos; IDENTIFIED BY &apos;password&apos;;</div><div class="line">mysql&gt;exit</div><div class="line"></div><div class="line"># su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance</div></pre></td></tr></table></figure>
<h3 id="创建glance用户"><a href="#创建glance用户" class="headerlink" title="创建glance用户"></a>创建glance用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># keystone user-create --name=glance --pass=passwd --email=123456@qq.com</div><div class="line"># keystone user-role-add --user=glance --tenant=service --role=admin</div></pre></td></tr></table></figure>
<h3 id="配置glance"><a href="#配置glance" class="headerlink" title="配置glance"></a>配置glance</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_uri http://controller:5000</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_host controller</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_port 35357</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_protocol http</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken admin_tenant_name service</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken admin_user glance</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf keystone_authtoken admin_password passwd</div><div class="line"># openstack-config --set /etc/glance/glance-api.conf paste_deploy flavor keystone</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_uri http://controller:5000</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_host controller</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_port 35357</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_protocol http</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken admin_tenant_name service</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken admin_user glance</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken admin_password passwd</div><div class="line"># openstack-config --set /etc/glance/glance-registry.conf paste_deploy flavor keystone</div><div class="line"># keystone service-create --name=glance --type=image --description=&quot;OpenStack Image Service&quot;</div><div class="line"># keystone endpoint-create --service-id=$(keystone service-list | awk &apos;/ image / &#123;print $2&#125;&apos;) --publicurl=http://controller:9292 --internalurl=http://controller:9292 --adminurl=http://controller:9292</div></pre></td></tr></table></figure>
<h3 id="启动glance服务并设置开机启动"><a href="#启动glance服务并设置开机启动" class="headerlink" title="启动glance服务并设置开机启动"></a>启动glance服务并设置开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># service openstack-glance-api start</div><div class="line"># service openstack-glance-registry start</div><div class="line"># chkconfig openstack-glance-api on</div><div class="line"># chkconfig openstack-glance-registry on</div></pre></td></tr></table></figure>
<h3 id="验证glance服务"><a href="#验证glance服务" class="headerlink" title="验证glance服务"></a>验证glance服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># wget http://download.cirros-cloud.net/0.3.2/cirros-0.3.2-x86_64-disk.img</div><div class="line"># glance image-create --name &quot;CirrOS&quot; --disk-format qcow2 --container-format bare --is-public True --progress &lt; cirros-0.3.2-x86_64-disk.img</div><div class="line"># glance image-list</div></pre></td></tr></table></figure>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/glance_image_list.png" alt="glance-image-list"></p>
<h2 id="安装和配置计算服务nova"><a href="#安装和配置计算服务nova" class="headerlink" title="安装和配置计算服务nova"></a>安装和配置计算服务nova</h2><h3 id="安装nova"><a href="#安装nova" class="headerlink" title="安装nova"></a>安装nova</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-nova-api openstack-nova-cert openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy openstack-nova-scheduler python-novaclient</div></pre></td></tr></table></figure>
<h3 id="配置nova"><a href="#配置nova" class="headerlink" title="配置nova"></a>配置nova</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"># openstack-config --set /etc/nova/nova.conf database connection mysql://nova:passwd@controller/nova</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend qpid</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT qpid_hostname controller</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT my_ip controller</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_listen controller</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_proxyclient_address controller</div><div class="line"></div><div class="line"># mysql -uroot -p</div><div class="line">mysql&gt; CREATE DATABASE nova;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;localhost&apos; \</div><div class="line">IDENTIFIED BY &apos;password&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;%&apos; \</div><div class="line">IDENTIFIED BY ‘password&apos;;</div><div class="line">mysql&gt;exit</div><div class="line"></div><div class="line"># su -s /bin/sh -c &quot;nova-manage db sync&quot; nova</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_host controller</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_protocol http</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_port 35357</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_user nova</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_tenant_name service</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_password passwd</div></pre></td></tr></table></figure>
<h3 id="创建nova用户，服务"><a href="#创建nova用户，服务" class="headerlink" title="创建nova用户，服务"></a>创建nova用户，服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># keystone user-create --name=nova --pass=passwd --email=123456@qq.com</div><div class="line"># keystone user-role-add --user=nova --tenant=service --role=admin</div><div class="line"># keystone service-create --name=nova --type=compute --description=&quot;OpenStack Compute&quot;</div><div class="line"># keystone endpoint-create --service-id=$(keystone service-list | awk &apos;/ compute / &#123;print $2&#125;&apos;) --publicurl=http://controller:8774/v2/%\(tenant_id\)s --internalurl=http://controller:8774/v2/%\(tenant_id\)s --adminurl=http://controller:8774/v2/%\(tenant_id\)s</div></pre></td></tr></table></figure>
<h3 id="启动并设置开机启动"><a href="#启动并设置开机启动" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># service openstack-nova-api start</div><div class="line"># service openstack-nova-cert start</div><div class="line"># service openstack-nova-consoleauth start</div><div class="line"># service openstack-nova-scheduler start</div><div class="line"># service openstack-nova-conductor start</div><div class="line"># service openstack-nova-novncproxy start</div><div class="line"># chkconfig openstack-nova-api on</div><div class="line"># chkconfig openstack-nova-cert on</div><div class="line"># chkconfig openstack-nova-consoleauth on</div><div class="line"># chkconfig openstack-nova-scheduler on</div><div class="line"># chkconfig openstack-nova-conductor on</div><div class="line"># chkconfig openstack-nova-novncproxy on</div></pre></td></tr></table></figure>
<h3 id="验证nova"><a href="#验证nova" class="headerlink" title="验证nova"></a>验证nova</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># nova image-list</div></pre></td></tr></table></figure>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/nova-image-list.png" alt="nova-image-list"></p>
<h2 id="配置network"><a href="#配置network" class="headerlink" title="配置network"></a>配置network</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT network_api_class nova.network.api.API</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT security_group_api nova</div><div class="line"># service openstack-nova-api restart</div><div class="line"># service openstack-nova-scheduler restart</div><div class="line"># service openstack-nova-conductor restart</div></pre></td></tr></table></figure>
<h2 id="安装和配置dashboard服务"><a href="#安装和配置dashboard服务" class="headerlink" title="安装和配置dashboard服务"></a>安装和配置dashboard服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install memcached python-memcached mod_wsgi openstack-dashboard</div></pre></td></tr></table></figure>
<p>修改/etc/openstack-dashboard/local_settings文件中 <code>CACHES</code>， <code>ALLOWED_HOST</code>， <code>OPENSTACK_HOST</code>字段为如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">···</div><div class="line">CACHES = &#123;</div><div class="line">    &apos;default&apos;: &#123;</div><div class="line">        &apos;BACKEND&apos; : &apos;django.core.cache.backends.memcached.MemcachedCache&apos;,</div><div class="line">        &apos;LOCATION&apos; : &apos;127.0.0.1:11211&apos;,</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">···</div><div class="line">···</div><div class="line">ALLOWED_HOSTS = [&apos;localhost&apos;, &apos;controller&apos;]</div><div class="line">···</div><div class="line">···</div><div class="line">OPENSTACK_HOST = &quot;controller&quot;</div><div class="line">···</div></pre></td></tr></table></figure></p>
<p>启动相关服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># setsebool -P httpd_can_network_connect on</div><div class="line"># service httpd start</div><div class="line"># service memcached start</div><div class="line"># chkconfig httpd on</div><div class="line"># chkconfig memcached on</div></pre></td></tr></table></figure></p>
<p>到这里， <code>controller</code>节点基本配置完毕，可以通过在浏览器中输入<code>http://controller/dashboard</code>，来验证是否配置正确。出现如下界面，说明配置正确。<br><img src="http://or8rxwtgb.bkt.clouddn.com/openstack_login_website.png" alt="openstack登录界面"></p>
<hr>
<h1 id="计算节点compute配置"><a href="#计算节点compute配置" class="headerlink" title="计算节点compute配置"></a>计算节点compute配置</h1><p>因为计算节点主要是提供资源以供控制节点利用，因此，计算节点的配置相对简单。</p>
<h2 id="安装MySQL数据库Python库"><a href="#安装MySQL数据库Python库" class="headerlink" title="安装MySQL数据库Python库"></a>安装MySQL数据库Python库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install MySQL-python</div></pre></td></tr></table></figure>
<h2 id="安装和配置计算服务nova-1"><a href="#安装和配置计算服务nova-1" class="headerlink" title="安装和配置计算服务nova"></a>安装和配置计算服务nova</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-nova-compute</div><div class="line"># openstack-config --set /etc/nova/nova.conf database connection mysql://nova:passwd@controller/nova</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_host controller</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_protocol http</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_port 35357</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_user nova</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_tenant_name service</div><div class="line"># openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_password passwd</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend qpid</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT qpid_hostname controller</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT my_ip compute</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT vnc_enabled True</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_listen 0.0.0.0</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_proxyclient_address compute</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT novncproxy_base_url http://controller:6080/vnc_auto.html</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT glance_host controller</div></pre></td></tr></table></figure>
<h3 id="启动并设置开机启动相关服务"><a href="#启动并设置开机启动相关服务" class="headerlink" title="启动并设置开机启动相关服务"></a>启动并设置开机启动相关服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># service libvirtd start</div><div class="line"># service messagebus start</div><div class="line"># service openstack-nova-compute start</div><div class="line"># chkconfig libvirtd on</div><div class="line"># chkconfig messagebus on</div><div class="line"># chkconfig openstack-nova-compute on</div></pre></td></tr></table></figure>
<h2 id="安装和配置network"><a href="#安装和配置network" class="headerlink" title="安装和配置network"></a>安装和配置network</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># yum install openstack-nova-network openstack-nova-api</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT network_api_class nova.network.api.API</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT security_group_api nova</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT network_manager nova.network.manager.FlatDHCPManager</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.libvirt.firewall.IptablesFirewallDriver</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT network_size 254</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT allow_same_net_traffic False</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT multi_host True</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT send_arp_for_ha True</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT share_dhcp_address True</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT force_dhcp_release True</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT flat_network_bridge br100</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT flat_interface eth1</div><div class="line"># openstack-config --set /etc/nova/nova.conf DEFAULT public_interface eth1</div></pre></td></tr></table></figure>
<h3 id="启动并设置开机启动相关服务-1"><a href="#启动并设置开机启动相关服务-1" class="headerlink" title="启动并设置开机启动相关服务"></a>启动并设置开机启动相关服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># service openstack-nova-network start</div><div class="line"># service openstack-nova-metadata-api start</div><div class="line"># chkconfig openstack-nova-network on</div><div class="line"># chkconfig openstack-nova-metadata-api on</div></pre></td></tr></table></figure>
<h3 id="创建初始网络"><a href="#创建初始网络" class="headerlink" title="创建初始网络"></a>创建初始网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># source admin-openrc.sh</div><div class="line"># nova network-create demo-net --bridge br100 --multi-host T --fixed-range-v4 203.0.113.24/29</div><div class="line"># nova net-list</div></pre></td></tr></table></figure>
<hr>
<h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h3 id="出现You-should-rebuild-using-libgmp-gt-5-to-avoid-timing-attack-vulnerability-警告"><a href="#出现You-should-rebuild-using-libgmp-gt-5-to-avoid-timing-attack-vulnerability-警告" class="headerlink" title="出现You should rebuild using libgmp &gt;= 5 to avoid timing attack vulnerability.警告"></a>出现You should rebuild using libgmp &gt;= 5 to avoid timing attack vulnerability.警告</h3><p><img src="http://or8rxwtgb.bkt.clouddn.com/libgmp_warning.png" alt="libgmp警告"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># wget https://ftp.gnu.org/gnu/gmp/gmp-6.1.2.tar.bz2</div><div class="line"># tar xvjpf gmp-6.1.2.tar.bz2</div><div class="line"># cd gmp-6.1.2</div><div class="line"># ./configure</div><div class="line"># make</div><div class="line"># make check</div><div class="line"># make install</div><div class="line"># cd ..</div><div class="line"># yum install python-devel</div><div class="line"># wget https://ftp.dlitz.net/pub/dlitz/crypto/pycrypto/pycrypto-2.6.1.tar.gz</div><div class="line"># tar zxvf pycrypto-2.6.1.tar.gz</div><div class="line"># cd pycrypto-2.6.1</div><div class="line"># ./configure</div><div class="line"># python setup.py install</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前因为需要在CentOS6.5上面安装了OpenStack的Icehouse版本，这里对安装过程进行记录。我这里是选择了OpenStack最基础的结构也就是一个控制节点&lt;code&gt;controller&lt;/code&gt;和一个计算节点&lt;code&gt;compute&lt;/code&gt;进行
    
    </summary>
    
    
      <category term="centos6.5" scheme="http://fbambooz.com/tags/centos6-5/"/>
    
      <category term="openstack" scheme="http://fbambooz.com/tags/openstack/"/>
    
      <category term="icehouse" scheme="http://fbambooz.com/tags/icehouse/"/>
    
      <category term="云计算" scheme="http://fbambooz.com/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="linux" scheme="http://fbambooz.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+NexT主题配置记录</title>
    <link href="http://fbambooz.com/2017/06/13/Hexo+NexT%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <id>http://fbambooz.com/2017/06/13/Hexo+NexT主题配置记录/</id>
    <published>2017-06-13T09:12:35.000Z</published>
    <updated>2017-07-14T08:50:32.022Z</updated>
    
    <content type="html"><![CDATA[<p>前一篇博客讲了如何利用<a href="http://fbambooz.com/2017/06/08/%E5%88%A9%E7%94%A8GitHub%20Pages%20+%20Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" title="利用GitHub Page + Hexo搭建博客">利用GitHub Page + Hexo搭建博客</a>，但是此时还是默认主题，不够美观，接下来我们就要按照自己的喜好来配置了。</p>
<p>Hexo主题非常多，可以参考<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo主题</a>,这里我是选用了NexT主题。</p>
<blockquote>
<p>需要注意的是：在Hexo中有两份主要的配置文件，其名称都是<code>_config.yml</code>。其中，一个位于站点根目录下，主要是Hexo本身的配置；另一个位于主题目录下，主要用于配置主题相关选项。为了描述方便，将前者称为 <strong>站点配置文件</strong>，后者称为 <strong>主题配置文件</strong></p>
</blockquote>
<h1 id="安装NexT主题"><a href="#安装NexT主题" class="headerlink" title="安装NexT主题"></a>安装NexT主题</h1><h2 id="下载NexT主题"><a href="#下载NexT主题" class="headerlink" title="下载NexT主题"></a>下载NexT主题</h2><p>在 <em>Cmder</em> 窗口下，进入Hexo站点根目录，使用 <em>Git</em> 下载Next主题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site</div><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next theme/next</div></pre></td></tr></table></figure></p>
<h2 id="启用NexT主题"><a href="#启用NexT主题" class="headerlink" title="启用NexT主题"></a>启用NexT主题</h2><p>与所有Hexo主题启用方式相同，下载完成后，在 <strong>站点配置文件</strong> 中，找到 <code>theme</code> 字段，将其值改为 <code>next</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure></p>
<p>至此，NexT主题已经安装完成，在切换验证之前，最好使用 <code>hexo clean</code> 来清除Hexo的缓存。</p>
<h2 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h2><p>启动Hexo本地站点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>如果命令行输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p>
<p>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查NexT主题是否成功安装。</p>
<h1 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h1><h2 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h2><p>编辑 <strong>站点配置文件</strong>，将 <code>language</code> 设置成你需要的语言。例如选择简体中文，那就将配置更改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure></p>
<p>这里我还是使用的默认的英语。</p>
<h2 id="选择Scheme"><a href="#选择Scheme" class="headerlink" title="选择Scheme"></a>选择Scheme</h2><p>Scheme是NexT提供的一种特性，可以提供不同的外观。目前NexT支持三种Scheme，分别为：</p>
<ul>
<li>Muse</li>
<li>Mist</li>
<li>Pisces</li>
</ul>
<p>可以根据自己的喜好来选择Scheme，我的博客是使用的Pisces。</p>
<p>Scheme的切换通过修改 <strong>主题配置文件</strong>， 会看到有scheme的三行配置，将你选择的scheme前 <code>#</code>注释掉即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#scheme: Muse</div><div class="line">#scheme: Mist</div><div class="line">scheme: Pisces</div></pre></td></tr></table></figure></p>
<h2 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h2><p>菜单包括三个部分，第一个是菜单项（也就是名称和链接），第二个是显示文本，第三个是图标。NexT是使用的<a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a>提供的图标，可以根据自己喜好自行修改。</p>
<p>编辑 <strong>主题配置文件</strong>，修改以下内容：</p>
<ul>
<li><p>设置菜单项，对应字段为 <code>menu</code>。格式为： <code>item name： link</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  #categories: /categories/</div><div class="line">  #about: /about/</div><div class="line">  archives: /archives/</div><div class="line">  tags: /tags/</div><div class="line">  #sitemap: /sitemap.xml</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure>
</li>
<li><p>设置菜单项的显示文本。这里因为我是直接使用默认的，就没有进行修改，如果你要改，可以通过修改 <strong>站点配置文件</strong> 选择你要改的语言，然后在NexT主题目录下的 <code>languages</code> 下对应的语言来进行自定义设置。</p>
</li>
<li>设置菜单项的图标。对应的字段为 <code>menu_icons</code>。格式为： <code>item name: icon name</code>。其中 <code>item name</code> 与之前的菜单名对应， <code>icon name</code>是Font Awesome图标的名字。 <code>enable</code>是控制是否显示图标。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  schedule: calendar</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  sitemap: sitemap</div><div class="line">  commonweal: heartbeat</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p>编辑 <strong>主题配置文件</strong>，修改字段 <code>avatar</code>，设置为头像的链接地址。该值可以为完整的URI地址，或者为站点内地址。我这里是设置的站点内地址。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">avatar: /images/little_panda.jpg</div></pre></td></tr></table></figure></p>
<h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><h2 id="设置RSS"><a href="#设置RSS" class="headerlink" title="设置RSS"></a>设置RSS</h2><p>NexT中RSS有三个选项。更改 <strong>主题配置文件</strong>，设定 <code>rss</code>字段的值：</p>
<ul>
<li><code>false</code>：禁用RSS</li>
<li>留空：使用Hexo生成的feed链接。需要安装 <code>hexo-generator-feed</code>插件。</li>
<li>具体链接地址：适用于以烧制过Feed的情形</li>
</ul>
<h2 id="添加『标签』页面"><a href="#添加『标签』页面" class="headerlink" title="添加『标签』页面"></a>添加『标签』页面</h2><p>新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。</p>
<ol>
<li><p>在 <em>Cmder</em> 窗口下，定位到Hexo站点目录。使用 <code>hexo new page</code>新建一个页面，命名为 <code>tags</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site</div><div class="line">$ hexo new page tags</div></pre></td></tr></table></figure>
</li>
<li><p>编辑新建的页面，将页面的类型设置为tags，主题将自动为这个页面显示标签云</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: tags</div><div class="line">date: 2017-06-07 21:49:58</div><div class="line">type: &quot;tags&quot;</div><div class="line">---</div></pre></td></tr></table></figure>
</li>
<li><p>编辑 <strong>主题配置文件</strong>，在 <code>menu</code>中添加 <code>tags</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives/</div><div class="line">  tags: /tags/</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h2><p>NexT提供了5种主题供你选择，默认使用的是白色的 <code>normal</code>主题，可选的值有 <code>normal</code>， <code>night</code>， <code>night blue</code>， <code>night bright</code>， <code>night eighties</code>。更改 <code>highlight_theme</code>字段，选择你喜欢的高亮主题，我这里选择的是 <code>night eighties</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Code Highlight theme</div><div class="line"># Available value:</div><div class="line">#    normal | night | night eighties | night blue | night bright</div><div class="line"># https://github.com/chriskempson/tomorrow-theme</div><div class="line">highlight_theme: night eighties</div></pre></td></tr></table></figure></p>
<h2 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h2><p>侧边栏社交链接的修改包含两个部分，第一个是链接，第二个是连接图标。</p>
<ol>
<li><p>链接放置在 <code>social</code> 字段下，一行一个链接。格式为： <code>显示文本：链接地址</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#social:</div><div class="line">  #LinkLabel: Link</div><div class="line">social:</div><div class="line">    GitHub: https://github.com/fbambooz</div><div class="line">    Email: mailto:fbambooz@gmail.com</div></pre></td></tr></table></figure>
</li>
<li><p>设置链接图标，对应字段为 <code>social_icons</code>。这里也是使用的Font Awesome图标。 <code>enable</code>选项用于控制是否显示图标。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">social_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mappings.</div><div class="line">  # KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  GitHub: github</div><div class="line">  Email: envelope</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="设置背景动画"><a href="#设置背景动画" class="headerlink" title="设置背景动画"></a>设置背景动画</h2><p>NexT默认是开启动画效果，当然你也可以设置 <code>use_motion</code>字段来关闭动画。并且NexT自带了几种背景动画，<code>canvas_nest</code>，<code>three_waves</code>，<code>canvas_lines</code>，<code>canvas_sphere</code>，<code>canvas_ribbon</code>，根据自己的喜好，设置为 <code>true</code>或 <code>false</code>即可。</p>
<blockquote>
<p>注意，只能同时开启一种背景动画。</p>
</blockquote>
<p>我这里是选用的 <code>canvas_nest</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># canvas_nest</div><div class="line">canvas_nest: true</div></pre></td></tr></table></figure></p>
<h2 id="设置阅读全文"><a href="#设置阅读全文" class="headerlink" title="设置阅读全文"></a>设置阅读全文</h2><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面。只需要在 <strong>主题配置文件</strong>中将 <code>auto_excerpt</code>字段的 <code>enable</code>设置为true即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Automatically Excerpt. Not recommend.</div><div class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</div><div class="line">auto_excerpt:</div><div class="line">  enable: true</div><div class="line">  length: 150</div></pre></td></tr></table></figure></p>
<h1 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h1><p>我们可以借助于一些第三方服务来扩展站点的功能。因为是新博客，我这里只利用了一些第三方服务。等以后扩展了再进一步补充。</p>
<h2 id="Google分析"><a href="#Google分析" class="headerlink" title="Google分析"></a>Google分析</h2><p>首先在<a href="https://www.google.com/analytics/" target="_blank" rel="external">Google Analytics</a>上注册帐号，并生成自己的Google 跟踪ID。然后编辑 <strong>主题配置文件</strong>，修改 <code>google_analytics</code>字段值为你的Google跟踪ID。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Google Analytics</div><div class="line">#google_analytics:</div><div class="line">google_analytics: your ID</div></pre></td></tr></table></figure></p>
<h2 id="不蒜子统计"><a href="#不蒜子统计" class="headerlink" title="不蒜子统计"></a>不蒜子统计</h2><p>编辑 <strong>主题配置文件</strong> 中的 <code>busuanzi_count</code>配置项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># Show PV/UV of the website/page with busuanzi.</div><div class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</div><div class="line">busuanzi_count:</div><div class="line">  # count values only if the other configs are false</div><div class="line">  enable: true</div><div class="line">  # custom uv span for the whole site</div><div class="line">  site_uv: true</div><div class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</div><div class="line">  site_uv_footer:</div><div class="line">  # custom pv span for the whole site</div><div class="line">  site_pv: true</div><div class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</div><div class="line">  site_pv_footer:</div><div class="line">  # custom pv span for one page only</div><div class="line">  page_pv: false</div><div class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;</div><div class="line">  page_pv_footer:</div></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上是我自己这个博客目前的改动，并不一定完全适合你，请根据自己的需要进行改动</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT使用文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前一篇博客讲了如何利用&lt;a href=&quot;http://fbambooz.com/2017/06/08/%E5%88%A9%E7%94%A8GitHub%20Pages%20+%20Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/&quot; titl
    
    </summary>
    
    
      <category term="hexo" scheme="http://fbambooz.com/tags/hexo/"/>
    
      <category term="NexT" scheme="http://fbambooz.com/tags/NexT/"/>
    
      <category term="blog" scheme="http://fbambooz.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>利用GitHub Pages + Hexo搭建博客</title>
    <link href="http://fbambooz.com/2017/06/08/%E5%88%A9%E7%94%A8GitHub%20Pages%20+%20Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://fbambooz.com/2017/06/08/利用GitHub Pages + Hexo搭建博客/</id>
    <published>2017-06-08T15:23:47.000Z</published>
    <updated>2017-07-15T09:21:42.208Z</updated>
    
    <content type="html"><![CDATA[<p>很久之前就想要搭建个人博客,但是因为懒惰、拖延,一直拖到现在,终于决定要去做了</p>
<p>现在就用这个博客来记录这两天我搭建博客的过程</p>
<p>关于GitHub Pages 和 Hexo的具体我就不多说了, 网上有很多相关介绍, 这里就主要记录下搭建的步骤</p>
<h1 id="环境-amp-版本"><a href="#环境-amp-版本" class="headerlink" title="环境&amp;版本"></a>环境&amp;版本</h1><blockquote>
<ul>
<li>系统: windows 10 64位</li>
<li>软件:<ul>
<li>Cmder: v1.3.2</li>
<li>git: version 2.11.0.windows.1</li>
<li>Node.js: v6.11.0</li>
<li>atom: version 1.17.2</li>
<li>hexo: 3.3.7</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a>配置GitHub</h1><p>访问<a href="https://github.com" target="_blank" rel="external">GitHub</a>,注册并登录GitHub</p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/home_of_github.png" alt="home of github"></p>
<p>选择首页的 <strong>Start a project</strong></p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/create_a_new_repository.png" alt="create a new repository"></p>
<p>在 <strong>Repository name</strong> 处填yourname.github.io</p>
<p>yourname与你的注册用户名一致,比如我的用户名为fbambooz,那就填fbambooz.github.io,如果你没有其他域名,那么这个就将是你博客的域名</p>
<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><p>我是装的<a href="http://cmder.net/" target="_blank" rel="external">Cmder</a>,这是windows上的一个控制台程序,下载的时候选择带有git的压缩包,解压后自动带有git。</p>
<p>当然,你也可以按照廖雪峰老师的<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="external">Git教程</a>来安装git。</p>
<p>在<em>Cmder</em>中输入 <code>git --version</code> , 出现如下图所示git的版本信息则表明git安装成功了</p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/cmder.png" alt="cmder git version"></p>
<h1 id="配置和使用GitHub"><a href="#配置和使用GitHub" class="headerlink" title="配置和使用GitHub"></a>配置和使用GitHub</h1><p>安装好git后,还需要配置相应的环境才能正常使用github</p>
<h2 id="设置用户信息"><a href="#设置用户信息" class="headerlink" title="设置用户信息"></a>设置用户信息</h2><p>在<em>Cmder</em>中输入:</p>
<p><code>$ git config --global user.name &quot;your name&quot; //用户名</code><br><code>$ git config --global user.email &quot;your email&quot; //邮箱</code></p>
<h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>首先看看你用户主目录下( 如我的是 <strong>C:\Users\fbambooz</strong> )是否有 <strong>.ssh</strong> 目录, 如果有, 再看看这个目录里是否有 <strong>id_rsa</strong> 和 <strong>id_rsa.pub</strong> 文件, 如果已经有了, 就可以跳到下一步; 如果没有,就要重新创建SSH key, 在<em>Cmder</em>中输入:</p>
<p><code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; //你的邮箱地址</code></p>
<p>系统会提示你创建密码, 这是为了防止他人使用你的SSH key, 但是基本不会有人来用, 可以设置为空, 也就是一路回车.</p>
<h2 id="添加SSH-key到GitHub"><a href="#添加SSH-key到GitHub" class="headerlink" title="添加SSH key到GitHub"></a>添加SSH key到GitHub</h2><ul>
<li>打开刚生成的 <strong>id_rsa.pub</strong> 文件(在 <strong>C:\Users\fbambooz.ssh</strong> 目录下), 并复制其中的内容</li>
</ul>
<ul>
<li>登录GitHub, 点击右上角头像, <strong>Settings</strong> -&gt; <strong>SSH and GPG keys</strong> -&gt; <strong>New SSH key</strong> ( 如果你已经登录了GitHub, 可以直接在<a href="https://github.com/settings/keys" target="_blank" rel="external">这里</a>添加SSH key)</li>
</ul>
<ul>
<li>填上任意Title, 然后在Key文本框里粘贴你刚刚复制的内容, 点击 <strong>Add SSH key</strong></li>
</ul>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/add_new_ssh_key.png" alt="add new ssh key"></p>
<h2 id="测试是否成功添加SSH-key"><a href="#测试是否成功添加SSH-key" class="headerlink" title="测试是否成功添加SSH key"></a>测试是否成功添加SSH key</h2><p>在<em>Cmder</em>中输入以下命令, 检查刚刚的设置是否成功:</p>
<p><code>$ ssh -T git@github.com</code></p>
<p>如果是下面的内容:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The authenticity of host &apos;github.com (192.30.255.113)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY7.</div><div class="line">Are you sure you want to continue connecting (yes/no)?</div></pre></td></tr></table></figure>
<p>这是正常的, 输入yes就好. 第一次连接, 会进行确认, 之后就没有这种确认了.</p>
<h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>进入<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js官网</a>下载</p>
<p><img src="http://or8rxwtgb.bkt.clouddn.com/nodejs.png" alt="download node.js"></p>
<p>我下载的是 <strong>v6.11.0 LTS</strong> , 然后运行 <strong>node-v6.11.0-x64.msi</strong> 进行安装</p>
<p>安装完成后在<em>Cmder</em>中运行 <code>$ node -v</code>, 如果显示<strong>v6.11.0</strong>, 说明安装成功</p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>在上面的准备工作都做好之后, 就可以安装Hexo了, 在<em>Cmder</em>中输入:</p>
<p><code>$ npm install -g hexo-cli</code></p>
<p>(可能有点慢, 稍稍等待)</p>
<p>创建一个新的文件夹, 用来存放你的博客的相关文件, 我这里创建的是 <strong>H:\fbambooz_blog</strong> , 在这个目录下运行<em>Cmder</em></p>
<p>首先要初始化, 在<em>Cmder</em>中运行:</p>
<p><code>$ hexo init</code></p>
<p>因为初始化要创建很多初始文件, 所以会有点慢, 成功后提示:</p>
<p><code>INFO  Start blogging with Hexo!</code></p>
<p>初始化hexo之后, 会自带一个hello world文章, 然后继续在<em>Cmder</em>中运行以下命令:</p>
<p><code>$ hexo generate</code><br><code>$ hexo server</code></p>
<p>现在访问<a href="localhost:4000/" target="_blank" rel="external">localhost:4000/</a>, 就可以看见网站默认的模样了</p>
<blockquote>
<p>如果此时无法正常访问 <code>http://localhost:4000</code>，那应该是4000端口被别的应用程序/进程占用了，目前常见占用4000端口的进程为：<strong>FoxitProtect.exe</strong>，对应服务为：<strong>fxservice</strong>，将其停止或修改hexo端口都可以解决</p>
</blockquote>
<p>如果要停止hexo, 在<em>Cmder</em>中按下<code>Ctrl + C</code>即可</p>
<blockquote>
<p>这里介绍下Hexo的常用命令, 括号中为该命令的简写方式:</p>
<ul>
<li>$ hexo clean 清除缓存文件</li>
<li>$ hexo generate(hexo g) 生成静态文件</li>
<li>$ hexo server(hexo s) 启动本地服务, 进行预览</li>
<li>$ hexo deploy(hexo d) 部署网站</li>
<li>$ hexo new “postname” 新建文章</li>
<li>$ hexo new page “pagename” 新建页面</li>
</ul>
</blockquote>
<h1 id="修改Hexo配置"><a href="#修改Hexo配置" class="headerlink" title="修改Hexo配置"></a>修改Hexo配置</h1><p>在 <strong>blog</strong> 目录下, 用<em>Atom</em>打开 <strong>_config.yml</strong> 文件, 修改相关参数, <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">Hexo配置</a>是官网对这些参数的介绍, 这里附上我的配置, 可以根据我中文备注的地方进行修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: https://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site 这里是你博客的主要信息, 按照你想填写的修改, 注意每个: 后需要有一个空格</div><div class="line">title: F.C.Y</div><div class="line">subtitle:</div><div class="line">description: Sometimes ever, sometimes never.</div><div class="line">author: Fbambooz</div><div class="line">email: fbambooz@gmail.com</div><div class="line">language: en</div><div class="line">timezone: Asia/Shanghai</div><div class="line"></div><div class="line"># URL 这里是设置域名的, 如果你有自己的域名, 就填写你的域名, 没有就GitHub Pages的地址, 如https://fbambooz.github.io</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line">url: https://fbambooz.github.io</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"># Directory</div><div class="line">source_dir: source</div><div class="line">public_dir: public</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line">i18n_dir: :lang</div><div class="line">skip_render:</div><div class="line"></div><div class="line"># Writing</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">future: true</div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: true</div><div class="line">  auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Date / Time format</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: next</div><div class="line"></div><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">## 重点! 这里填写你的GitHub的地址, 将下面中我的名字换成你自己的,</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:fbambooz/fbambooz.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<h1 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h1><p>修改完Hexo全局配置之后, 接下来就是将博客部署到GitHub Pages上</p>
<p>因为我们是要利用git部署, 所以还需要下载一个插件, 在<em>Cmder</em>中运行:<br><code>$ npm install hexo-deploer-git --save</code></p>
<p>部署博客流程:</p>
<ul>
<li>先清除缓存文件 <code>$ hexo clean</code></li>
<li>再次生成静态文件 <code>$ hexo generate</code></li>
<li>启动本地服务进行预览 <code>$ hexo server</code></li>
<li>预览没有问题后, <code>Ctrl + C</code> 停止预览</li>
<li>将博客部署到GitHub上 <code>$ hexo deploy</code> (第一次可能会出现GitHub的登录框, 正常登录即可)</li>
</ul>
<p>没问题的话, 在浏览器中输入yourname.github.io, 就可以看到你刚刚搭建的博客了</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>上述步骤是在windows下进行的, Mac和Linux的大致流程应当相同.</p>
<p>之后发布文章的过程为:</p>
<ul>
<li><code>$ hexo new postname</code> 创建新文章</li>
<li>编辑新文章</li>
<li><code>$ hexo clean</code> 清除缓存</li>
<li><code>$ hexo g</code> 生成静态文件</li>
<li><code>$ hexo d</code> 发布</li>
</ul>
<hr>
<p>到这里已经完成了基础的博客搭建, 但是这个博客还有许多地方需要设置和调整, 我会在之后的博客中记录我所做的调整.</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo主页</a></p>
<p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰Git教程</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/25471760" target="_blank" rel="external">教你免费搭建个人博客，Hexo&amp;Github</a></p>
<p><a href="http://div.io/topic/1691" target="_blank" rel="external">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p>
<p><a href="http://code.youmeek.com/2016/02/28/2016/02/Hexo/#创建-Hexo-项目" target="_blank" rel="external">使用 Github 空间搭建 Hexo 技术博客–安装篇（基于 IntelliJ IDEA）</a></p>
<p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久之前就想要搭建个人博客,但是因为懒惰、拖延,一直拖到现在,终于决定要去做了&lt;/p&gt;
&lt;p&gt;现在就用这个博客来记录这两天我搭建博客的过程&lt;/p&gt;
&lt;p&gt;关于GitHub Pages 和 Hexo的具体我就不多说了, 网上有很多相关介绍, 这里就主要记录下搭建的步骤&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://fbambooz.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://fbambooz.com/tags/blog/"/>
    
      <category term="git" scheme="http://fbambooz.com/tags/git/"/>
    
      <category term="github" scheme="http://fbambooz.com/tags/github/"/>
    
      <category term="node.js" scheme="http://fbambooz.com/tags/node-js/"/>
    
  </entry>
  
</feed>
